<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-03-07T13:13:18 ICT" name="Reqres Automation API" finished-at="2025-03-07T13:13:24 ICT" duration-ms="5489">
    <groups>
    </groups>
    <test started-at="2025-03-07T13:13:18 ICT" name="Test Get, Post, Put, Patch, Delete and Validate" finished-at="2025-03-07T13:13:24 ICT" duration-ms="5489">
      <class name="api.auto.test.UpdateUserTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:api.auto.test.UpdateUserTest@1573f9fc]" started-at="2025-03-07T13:13:21 ICT" name="setup" finished-at="2025-03-07T13:13:21 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testPatchUser()[pri:0, instance:api.auto.test.UpdateUserTest@1573f9fc]" started-at="2025-03-07T13:13:21 ICT" name="testPatchUser" finished-at="2025-03-07T13:13:21 ICT" duration-ms="566" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPatchUser -->
      </class> <!-- api.auto.test.UpdateUserTest -->
      <class name="api.auto.test.DeleteUserTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:api.auto.test.DeleteUserTest@6150c3ec]" started-at="2025-03-07T13:13:21 ICT" name="setup" finished-at="2025-03-07T13:13:21 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testDeleteUser()[pri:0, instance:api.auto.test.DeleteUserTest@6150c3ec]" started-at="2025-03-07T13:13:21 ICT" name="testDeleteUser" finished-at="2025-03-07T13:13:22 ICT" duration-ms="443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteUser -->
      </class> <!-- api.auto.test.DeleteUserTest -->
      <class name="api.auto.test.EdgeCaseTest">
        <test-method signature="testMaximumBoundary()[pri:0, instance:api.auto.test.EdgeCaseTest@7e6f74c]" started-at="2025-03-07T13:13:22 ICT" name="testMaximumBoundary" finished-at="2025-03-07T13:13:23 ICT" duration-ms="614" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMaximumBoundary -->
        <test-method is-config="true" signature="setup()[pri:0, instance:api.auto.test.EdgeCaseTest@7e6f74c]" started-at="2025-03-07T13:13:22 ICT" name="setup" finished-at="2025-03-07T13:13:22 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testMinimumBoundary()[pri:0, instance:api.auto.test.EdgeCaseTest@7e6f74c]" started-at="2025-03-07T13:13:23 ICT" name="testMinimumBoundary" finished-at="2025-03-07T13:13:23 ICT" duration-ms="458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMinimumBoundary -->
        <test-method signature="testOutOfRange()[pri:0, instance:api.auto.test.EdgeCaseTest@7e6f74c]" started-at="2025-03-07T13:13:23 ICT" name="testOutOfRange" finished-at="2025-03-07T13:13:24 ICT" duration-ms="455" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <400> but was <201>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <400> but was <201>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at api.auto.test.EdgeCaseTest.testOutOfRange(EdgeCaseTest.java:52)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at api.auto.test.TestRunner.main(TestRunner.java:10)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testOutOfRange -->
      </class> <!-- api.auto.test.EdgeCaseTest -->
      <class name="api.auto.test.GetUserTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:api.auto.test.GetUserTest@5542c4ed]" started-at="2025-03-07T13:13:21 ICT" name="setup" finished-at="2025-03-07T13:13:21 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testGetListUsers()[pri:0, instance:api.auto.test.GetUserTest@5542c4ed]" started-at="2025-03-07T13:13:21 ICT" name="testGetListUsers" finished-at="2025-03-07T13:13:21 ICT" duration-ms="123" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetListUsers -->
      </class> <!-- api.auto.test.GetUserTest -->
      <class name="api.auto.test.CreateUserTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:api.auto.test.CreateUserTest@6025e1b6]" started-at="2025-03-07T13:13:18 ICT" name="setup" finished-at="2025-03-07T13:13:19 ICT" duration-ms="258" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testPostCreateUsers()[pri:0, instance:api.auto.test.CreateUserTest@6025e1b6]" started-at="2025-03-07T13:13:19 ICT" name="testPostCreateUsers" finished-at="2025-03-07T13:13:20 ICT" duration-ms="1772" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPostCreateUsers -->
      </class> <!-- api.auto.test.CreateUserTest -->
      <class name="api.auto.test.NegativeTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:api.auto.test.NegativeTest@44c03695]" started-at="2025-03-07T13:13:22 ICT" name="setup" finished-at="2025-03-07T13:13:22 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="testInvalidInput()[pri:0, instance:api.auto.test.NegativeTest@44c03695]" started-at="2025-03-07T13:13:22 ICT" name="testInvalidInput" finished-at="2025-03-07T13:13:22 ICT" duration-ms="727" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidInput -->
      </class> <!-- api.auto.test.NegativeTest -->
    </test> <!-- Test Get, Post, Put, Patch, Delete and Validate -->
  </suite> <!-- Reqres Automation API -->
</testng-results>
